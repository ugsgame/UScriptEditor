// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_SCRIPTREQSTACK_NSCRIPTHOOK_H_
#define FLATBUFFERS_GENERATED_SCRIPTREQSTACK_NSCRIPTHOOK_H_

#include "flatbuffers/flatbuffers.h"

namespace NScriptHook {

struct FReqStack;

struct FReqStack FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_STACKINDEX = 4
  };
  int32_t StackIndex() const {
    return GetField<int32_t>(VT_STACKINDEX, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<int32_t>(verifier, VT_STACKINDEX) &&
           verifier.EndTable();
  }
};

struct FReqStackBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_StackIndex(int32_t StackIndex) {
    fbb_.AddElement<int32_t>(FReqStack::VT_STACKINDEX, StackIndex, 0);
  }
  explicit FReqStackBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  FReqStackBuilder &operator=(const FReqStackBuilder &);
  flatbuffers::Offset<FReqStack> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<FReqStack>(end);
    return o;
  }
};

inline flatbuffers::Offset<FReqStack> CreateFReqStack(
    flatbuffers::FlatBufferBuilder &_fbb,
    int32_t StackIndex = 0) {
  FReqStackBuilder builder_(_fbb);
  builder_.add_StackIndex(StackIndex);
  return builder_.Finish();
}

inline const NScriptHook::FReqStack *GetFReqStack(const void *buf) {
  return flatbuffers::GetRoot<NScriptHook::FReqStack>(buf);
}

inline const NScriptHook::FReqStack *GetSizePrefixedFReqStack(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<NScriptHook::FReqStack>(buf);
}

inline bool VerifyFReqStackBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<NScriptHook::FReqStack>(nullptr);
}

inline bool VerifySizePrefixedFReqStackBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<NScriptHook::FReqStack>(nullptr);
}

inline void FinishFReqStackBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<NScriptHook::FReqStack> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedFReqStackBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<NScriptHook::FReqStack> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace NScriptHook

#endif  // FLATBUFFERS_GENERATED_SCRIPTREQSTACK_NSCRIPTHOOK_H_
